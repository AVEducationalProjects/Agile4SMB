@using Agile4SMB.Shared
@using Agile4SMB.Client.Utils

<div class="form-group">
    <select class="form-control" @bind="SelectedBacklogId">
        @foreach (var (id, name, unit) in _backlogList)
        {
            <option value=@id>@name (@unit)</option>
        }
    </select>
</div>

@code {

    [Parameter] public OrganizationUnitDTO Unit { get; set; }

    [Parameter] public ISelectObserver<BacklogDefinitionDTO> SelectObserver { get; set; }


    private long _selectedBacklogId;
    private BacklogDefinitionDTO _selectedBacklog;
    private IEnumerable<(long id, string name, string unit)> _backlogList;

    private long SelectedBacklogId
    {
        get => _selectedBacklogId;
        set
        {
            _selectedBacklogId = value;

            var backlog = Unit.GetAvailableBacklogs().Single(x => x.backlog.Id == _selectedBacklogId).backlog;
            SelectObserver.Select(backlog);
        }
    }

    protected override Task OnParametersSetAsync()
    {
        _backlogList = Unit
            .GetAvailableBacklogs()
            .Select(x => (id: x.backlog.Id, name: x.backlog.Name, unit: x.unit.Name));

        _selectedBacklogId = SelectObserver.Item?.Id ?? (_backlogList?.FirstOrDefault().id ?? 0);

        return base.OnParametersSetAsync();
    }

}
