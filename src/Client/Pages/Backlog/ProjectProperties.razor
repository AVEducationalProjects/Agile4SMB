@using Agile4SMB.Shared
@using Agile4SMB.Client.Services
@using Agile4SMB.Client.Utils

@inject UserService UserService

@if (Project != null)
{
    <div class="d-flex w-100 justify-content-between mb-3 pt-2">
        @if (Project.State == ProjectState.New)
        {
            <button class="btn btn-sm btn-primary" @onclick="Approve"> <i class="oi oi-media-play" />&nbsp;&nbsp;Согласовать  </button>
        }

        @if (Project.State == ProjectState.Approved)
        {
            <button class="btn btn-sm btn-primary" @onclick="DoWork"> <i class="oi oi-media-play" />&nbsp;&nbsp;В работу  </button>
        }

        @if (Project.State == ProjectState.InProgress)
        {
            <button class="btn btn-sm btn-primary" @onclick="CompleteWork"> <i class="oi oi-media-play" />&nbsp;&nbsp;Завершить  </button>
        }

        @if (Project.State == ProjectState.Stopped)
        {
            <button class="btn btn-sm btn-primary" @onclick="Resume"> <i class="oi oi-media-play" />&nbsp;&nbsp;Возобновить</button>
        }

        @if (Project.State == ProjectState.InProgress)
        {
            <button class="btn btn-sm btn-warning" @onclick="Pause"> <i class="oi oi-media-pause" />&nbsp;&nbsp;Приостановить</button>
        }

        @if (Project.State != ProjectState.Done && Project.State != ProjectState.Canceled)
        {
            <button class="btn btn-sm btn-danger" @onclick="Cancel"> <i class="oi oi-media-stop" />&nbsp;&nbsp;Отменить</button>
        }
    </div>

    <EditForm Model="@Project">
        <div class="form-group">
            <label for="projectName">Название проекта</label>
            <textarea id="projectName" class="form-control"
                      value="@Project.Name"
                      @oninput="(e) => { Project.Name = e.Value.ToString(); SelectObserver.Update(); }"></textarea>
        </div>

        <div class="form-group">
            <label for="projectPurpose">Соответствие целям</label>
            <ul>
                <li>Получение прибыли с имеющихся клиентов в размере 10 млн. руб.</li>
                <li>Развитие продуктовой линейки FSM</li>
            </ul>

            <button id="projectPurpose" class="btn btn-light">Определить соответствие целям</button>
        </div>

        <div class="form-group">
            <label for="projectAssignee">Ответственный</label>
            <select id="projectAssignee" class="form-control" @bind="@Project.UnitId">
                @foreach (var unit in UserService.GetOrganizationUnits())
                {
                    <option value=@unit.Id>@unit.Name</option>
                }
            </select>
        </div>


        <div class="form-group">
            <label for="projectAssignee">Задачи</label>
            <div class="list-group">
                @foreach (var task in Project.Tasks)
                {
                    <div class="form-row">
                        <div class="form-group col-1">
                            <input class="form-control form-control-sm" type="checkbox" @bind="task.Done" />
                        </div>
                        <div class="form-group col-6">
                            <input class="form-control form-control-sm" type="text" @bind="task.Name" />
                        </div>
                        <div class="form-group col-4">
                            <select id="projectAssignee" class="form-control" @bind="@task.UnitId">
                                @foreach (var unit in UserService.GetOrganizationUnits())
                                {
                                    <option value=@unit.Id>@unit.Name</option>
                                }
                            </select>
                        </div>
                        <div class="form-group col-1 text-right">
                            <button class="btn btn-sm btn-outline-danger" @onclick="()=> DeleteTask(task)"><i class="oi oi-x"></i></button>
                        </div>
                    </div>
                }
            </div>

            <button id="addTask" class="btn btn-light" @onclick="AddTask">Добавить задачу</button>
        </div>

    </EditForm>
}

@code {

    [Parameter] public ProjectDTO Project { get; set; }

    [Parameter] public ISelectObserver<ProjectDTO> SelectObserver { get; set; }

    private void Approve()
    {
        Project.State = ProjectState.Approved;
        SelectObserver.Update();
    }

    private void DoWork()
    {
        Project.State = ProjectState.InProgress;
        SelectObserver.Update();
    }

    private void CompleteWork()
    {
        Project.State = ProjectState.Done;
        SelectObserver.Update();
    }

    private void Resume()
    {
        Project.State = ProjectState.InProgress;
        SelectObserver.Update();
    }

    private void Pause()
    {
        Project.State = ProjectState.Stopped;
        SelectObserver.Update();
    }

    private void Cancel()
    {
        Project.State = ProjectState.Canceled;
        SelectObserver.Update();
    }

    private void DeleteTask(TaskDTO task)
    {
        UserService.DeleteTaskFromProject(Project, task);
    }

    private void AddTask()
    {
        UserService.CreateTaskInProject(Project, "Новая задача");
    }

}
