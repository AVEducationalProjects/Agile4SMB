@page "/goals"
@using Agile4SMB.Client.Services
@using Agile4SMB.Shared
@using Agile4SMB.Shared.Domain

@inject GoalsService GoalsService

@if (_goals != null)
{
    <div class="d-flex w-100 justify-content-between mb-3">
        <button class="btn btn-sm btn-success" @onclick="AddGoal"><i class="oi oi-fire"/>&nbsp;Новая</button>
    </div>

    <div class="list-group">
        @foreach (var goal in _goals)
        {
            <EditForm Model="@goal">
                <div class="form-row mb-3">
                    <div class="form-group col-11">
                        <label>Название цели</label>
                        <InputText class="form-control form-control-sm" type="text"
                                   @bind-Value="@goal.Name"/>
                    </div>
                    <div class="form-group col-1 text-right">
                        <button class="btn btn-sm btn-outline-danger"
                                @onclick="() => DeleteGoal(goal)">
                            <i class="oi oi-x"></i>
                        </button>
                    </div>
                    <div class="form-group col-11">
                        <label>Описание</label>
                        <InputTextArea class="form-control form-control-sm" type="text"
                                       @bind-Value="@goal.Description"/>
                    </div>
                </div>
            </EditForm>
        }
    </div>
}


@code{

    IEnumerable<Goal> _goals;

    protected override async Task OnInitializedAsync()
    {
        _goals = await GoalsService.GetGoals();
    }

    private async Task AddGoal()
    {
        await GoalsService.CreateGoal("Новая цель");
    }

    private async Task DeleteGoal(Goal goal)
    {
        await GoalsService.DeleteGoal(goal);
    }

}